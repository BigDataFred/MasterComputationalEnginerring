v<-abs(out[3])
M<-potmod(Ca,u,n)*potmod(Cb,v,n)
cat("mensaje decifrado:",M)
#3
print("Problema 3")
n<-817
eA<-19
eB<-29
Ca<-191
Cb<-362
source("aritmod/euclidesext.R")
out<-euclidesext(eA,eB)
u<-abs(out[2])
v<-abs(out[3])
M<-potmod(Ca,u,n)*potmod(Cb,v,n)
cat("mensaje decifrado:",M)
#3
print("Problema 3")
n<-817
eA<-19
eB<-29
Ca<-191
Cb<-362
source("aritmod/euclidesext.R")
out<-euclidesext(eA,eB)
u<-abs(out[2])
v<-abs(out[3])
M<-potmod(Ca,u,n)*potmod(Cb,v,n)
cat("mensaje decifrado:",M)
#3
print("Problema 3")
n<-817
eA<-19
eB<-29
Ca<-191
Cb<-362
source("aritmod/euclidesext.R")
out<-euclidesext(eA,eB)
u<-abs(out[2])
v<-abs(out[3])
M<-potmod(Ca,u,n)*potmod(Cb,v,n)
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
print("Problema 4")
n<-46927
e<-39423
C<-vector()
C[1]<-20736
i<-2
while (TRUE){
C[i] <- potmod(C[i-1],e,n)
if (C[i]!=C[1]){
M <- C[i-1]%%n
break
}
i<-i+1
}
cat("mensaje decifrado:",M)
#2
print("Problema 2")
n<-536813567
e<-3602561
#factorizacion por fuerza
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[1] = n/(n/f[1])
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
}
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul<-n + 1 - (p + q) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
p*q
n
p*q == n
(d*e)%%n =1
(d*e)%%n ==1
d*e
(d*e)%%n
rm(list=ls())
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
rm(list=ls())
print("Problema 2")
n<-536813567
e<-3602561
#factorizacion por fuerza
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[1] = n/(n/f[1])
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
}
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
p*q
(p*q) == n
eul<-n + 1 - (p + q) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
source("aritmod/invmod.R")
d<-invmod(e,eul)#calve privada(d)
(d*e)%%n
eul <- n-(p+q)+1
d<-invmod(e,eul)#calve privada(d)
(d*e)%%n
eul<-n + 1 - (p + q) # funcion de euler
eul
eul <- n-(p+q)+1
eul
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
}
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
p*q
p*q == n
(p*q) == n
eul <- n-(p+q)+1
d<-invmod(e,eul)#calve privada(d)
(d*e)%%n
n
source("primfact/milrab.R")
milrab(n,1)
source("aritmod/invmod.R")
source("primfact/milrab.R")
print("Problema 2")
n<-536813567
e<-3602561
#factorizacion por fuerza
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
}
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul<-(p-1)*(q-1) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
eul
e*d
(e*d)%%n
source('~/MasterIngeneriaComputacional2018/criptografia/programas/primfact/Entrega_P5_Semana4_FredericRoux.R')
sqrt(p)
sqrt(q)
f
(p-1)*(q-1)
eul <- n-(p+q)+1
eul
eul<-(p-1)*(q-1)
eul
eul <- n-(p+q)+1
d<-invmod(e,eul)#calve privada(d)
eul <- n-(p+q)+1
eul
source("primfact/fermat.R")
n<-48959 # clave publica (n)
e<-6529# clave publica (e)
C<-"CHUBBBVDCEMOBUFMBKYB" # mensaje cifrado
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[1] = n/(n/f[1])
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
} # factorizacion por fuerza
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul<-n + 1 - (p + q) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
D <- decRSAch(p, q, d, LETTERS, C, 3, 4) # mensaje decifrado
D <- paste(D,sep="",collapse="")
print(D)
#1
n<-48959 # clave publica (n)
e<-6529# clave publica (e)
C<-"CHUBBBVDCEMOBUFMBKYB" # mensaje cifrado
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[1] = n/(n/f[1])
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
} # factorizacion por fuerza
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul<-n + 1 - (p + q) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
D <- decRSAch(p, q, d, LETTERS, C, 3, 4) # mensaje decifrado
#5. Problemas
############################################
source("publica/cifRSA.R")
source("publica/decRSA.R")
source("publica/decRSAch.R")
source("publica/decRSAnum.R")
source("publica/decRSAnumch.R")
#1
n<-48959 # clave publica (n)
e<-6529# clave publica (e)
C<-"CHUBBBVDCEMOBUFMBKYB" # mensaje cifrado
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[1] = n/(n/f[1])
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
} # factorizacion por fuerza
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul<-n + 1 - (p + q) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
D <- decRSAch(p, q, d, LETTERS, C, 3, 4) # mensaje decifrado
D <- paste(D,sep="",collapse="")
print(D)
p
srt(p)
sqrt(p)
sqrt(q)
srt(53)
sqrt(53)
sqrt(43)
sqrt(63)
sqrt(73)
sqrt(33)
sqrt(23)
sqrt(13)
p
q
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
#1
n<-48959 # clave publica (n)
e<-6529# clave publica (e)
C<-"CHUBBBVDCEMOBUFMBKYB" # mensaje cifrado
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[1] = n/(n/f[1])
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
} # factorizacion por fuerza
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul<-n + 1 - (p + q) # funcion de euler
d<-invmod(e,eul)#calve privada(d)
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
n-(p+q)+1
n-(p+q)+1
eul <- n-(p+q)+1
eul
eul<-(p-1)*(q-1)
eul
eul<-n-1
eul
d<-invmod(e,eul)#calve privada(d)
(d*e)
(d*e)%%n
(d*e)%%eul
n
eul <- n-1
d<-invmod(e,eul)#calve privada(d)
(d*e)%%eul
D2<-NULL
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
D2 <- paste(D2,sep="",collapse="")
print(D2)
eul <- (p-1)*(q-1)
(d*e)%%eul
eul <- n-1
d<-invmod(e,eul)#calve privada(d)
(d*e)%%eul
C<-"axyfzdbkwngupbfpnazyahrchcf"
# decifrando sin el teorema chino
D1<-NULL
D1 <- decRSA(p, q, d, letters, C, 6, 7) # mensaje decifrado
D1 <- paste(D1,sep="",collapse="")
print(D1)
# decifrando con el teorema chino
D2<-NULL
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
p
q
d
(d*e)%%eul
# decifrando sin el teorema chino
D1<-NULL
D1 <- decRSA(p, q, d, letters, C, 6, 7) # mensaje decifrado
D1 <- paste(D1,sep="",collapse="")
print(D1)
C<-"axyfwdbkwngupbfpnazyahrchcf"
# decifrando sin el teorema chino
D1<-NULL
D1 <- decRSA(p, q, d, letters, C, 6, 7) # mensaje decifrado
D1 <- paste(D1,sep="",collapse="")
print(D1)
# decifrando con el teorema chino
D2<-NULL
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
D2 <- paste(D2,sep="",collapse="")
print(D2)
milrab(n,1)
milrab(n,2)
milrab(n,3)
milrab(n,4)
milrab(n,5)
milrab(n,6)
source("primfact/milrab.R")
print("Problema 2")
n<-536813567
e<-3602561
#factorizacion por fuerza
f<-vector(length=2)
f[1]<-3
while (TRUE){
if (n%%f[1]==0){
f[2] = n/f[1]
break
}
f[1]<-f[1]+2
}
p<-f[1]# clave privada(p)
q<-f[2]#clave privada(q)
eul <- n-1
d<-invmod(e,eul)#calve privada(d)
print(p*q==n)
print((d*e)%%eul ==1)
(d*e)%%((p-1)*(q-1))
(d*e)%%(n-1)
n
sqrt(100)
sqrt(n)
sqrt(67)
n
g
ferm
fer
m
fer
ferm
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
d<-invmod(e,eul)#calve privada(d)
print(p*q==n)
print((d*e)%%eul ==1)
C<-"axyfwdbkwngupbfpnazyahrchcf"
# decifrando sin el teorema chino
D1<-NULL
D1 <- decRSA(p, q, d, letters, C, 6, 7) # mensaje decifrado
D1 <- paste(D1,sep="",collapse="")
print(D1)
# decifrando con el teorema chino
D2<-NULL
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
D2 <- paste(D2,sep="",collapse="")
print(D2)
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
try (){}
try (){D1 <- decRSA(p, q, d, letters, C, 6, 7)}
try (decRSA(p, q, d, letters, C, 6, 7))
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
# decifrando con el teorema chino
D2<-NULL
D2 <- try(decRSAch(p, q, d, letters, C, 6, 7)) # mensaje decifrado
D2 <- tryCatch(decRSAch(p, q, d, letters, C, 6, 7)) # mensaje decifrado
# decifrando con el teorema chino
D2<-NULL
D2 <- tryCatch(decRSAch(p, q, d, letters, C, 6, 7)) # mensaje decifrado
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
help("tryCatch")
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
C<-"axyfiudbkwngupbfpnazyahrchcf"
# decifrando sin el teorema chino
D1<-NULL
D1 <- try(decRSA(p, q, d, letters, C, 6, 7)) # mensaje decifrado
D1 <- paste(D1,sep="",collapse="")
cat("mensaje:",D1)
# decifrando con el teorema chino
D2<-NULL
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
D2 <- paste(D2,sep="",collapse="")
cat("mensaje:",D2)
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
source('~/MasterIngeneriaComputacional2018/criptografia/semana6/problemaspublica.R')
p
q
d
(d*e)%%eul
n
n
f
source('~/MasterIngeneriaComputacional2018/criptografia/programas/publica/problemaspublica.R')
# decifrando con el teorema chino
D2<-NULL
D2 <- decRSAch(p, q, d, letters, C, 6, 7) # mensaje decifrado
D2 <- paste(D2,sep="",collapse="")
cat("mensaje:",D2)
