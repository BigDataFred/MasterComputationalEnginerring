middleC <- floor(notefreq('C',ref=440,octave=3))
middleC2 <- floor(notefreq('C',ref=440,octave=2))
ix <- seq(0,10*y@samp.rate,1)
hspec1<-meanspec(y@left[ix],f=y@samp.rate,wn='hanning',wl=512,plot=0)
#plot(hspec1,type='l')
bin = round((middleC*512)/y@samp.rate)
plot(0,0,type='n',xlim=c(0,4),xlab='Frequency [kHz]',ylab='Amplitude')
lines(hspec1,type='l')
points(middleC2/1e3,hspec1[bin],type='o',col='green')
points(middleC/1e3,hspec1[bin],type='o',col='red')
legend(3,0.5,legend=c('f=130','f=261'),text.col=c('red','green'))
ix <- seq(64000,length(y),1)
hspec1<-meanspec(y@left[ix],f=y@samp.rate,wn='hanning',wl=512,plot=0)
#plot(hspec1,type='l')
bin = round((middleC*512)/y@samp.rate)
plot(hspec1,type='l',xlim=c(0,4),xlab='Frequency [kHz]',ylab='Amplitude')
lines(middleC2/1e3,hspec1[bin],type='o',col='green')
lines(middleC/1e3,hspec1[bin],type='o',col='red')
legend(3,0.5,legend=c('f=130','f=261'),text.col=c('red','green'))
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left,type='l',col='gray')
hspec1<-meanspec(y@left,f=fs,wn='hanning',wl=512,plot=1)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left,type='l',col='gray')
hspec1<-meanspec(y@left[seq(1,1e3,1)],f=fs,wn='hanning',wl=512,plot=1)
help("meanspec")
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left,4))],type='l',col='gray')
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left[seq(1,1e3,1)],f=fs,wn='hanning',wl=512,plot=1)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left[seq(1,500,1)],f=fs,wn='hanning',wl=512,plot=1)
length(y@left)
seq(1,500,1)
y@left[seq(1,500,1)]
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left[seq(1,500,1)],f=fs,wn='hanning',wl=512,plot=1)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left[seq(1,512,1)],f=fs,wn='hanning',wl=512,plot=1)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=1)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=1)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=1)
axis(1,xlim=c(0,10))
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=1)
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=1)
help(ax9s)
help(axiss)
help(axis)
par(xlim=c(0,10))
par(xlim(0,10))
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=0)
plot(hspec2,xlim=c(0,10))
hspec3<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec4<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=0)
hspec5<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=0)
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=0)
hspec3<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec4<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=0)
hspec5<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=0)
plot(hspec1,xlim=c(0,10),type='l')
plot(hspec2,xlim=c(0,10),type='l')
plot(hspec3,xlim=c(0,10),type='l')
plot(hspec4,xlim=c(0,10),type='l')
plot(hspec5,xlim=c(0,10),type='l')
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=0)
hspec3<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec4<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=0)
hspec5<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=0)
plot(hspec1,xlim=c(0,3),type='l')
plot(hspec2,xlim=c(0,3),type='l')
plot(hspec3,xlim=c(0,3),type='l')
plot(hspec4,xlim=c(0,3),type='l')
plot(hspec5,xlim=c(0,3),type='l')
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=0)
hspec3<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec4<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=0)
hspec5<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=0)
plot(hspec1,xlim=c(0,3),type='l',xlabel='Frequency [Hz]',ylab='Amplitude')
plot(hspec2,xlim=c(0,3),type='l',xlabel='Frequency [Hz]',ylab='Amplitude')
plot(hspec3,xlim=c(0,3),type='l',xlabel='Frequency [Hz]',ylab='Amplitude')
plot(hspec4,xlim=c(0,3),type='l',xlabel='Frequency [Hz]',ylab='Amplitude')
plot(hspec5,xlim=c(0,3),type='l',xlabel='Frequency [Hz]',ylab='Amplitude')
p2d<-'/Users/froux/Downloads/CódigoDelCursoDeProcesamientoDelAudioDigital-20190317/ficherosHTML/www/'
fnCancion<-paste(p2d,"cancion.wav",sep = '')
y <- readWave(fnCancion)
fs = y@samp.rate
par(mfrow=c(3,2))
plot(y@left[seq(0,length(y@left),4)],type='l',col='gray')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=512,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=1024,plot=0)
hspec3<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec4<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=4096,plot=0)
hspec5<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=8192,plot=0)
plot(hspec1,xlim=c(0,3),type='l',xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:512')
plot(hspec2,xlim=c(0,3),type='l',xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
plot(hspec3,xlim=c(0,3),type='l',xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:2048')
plot(hspec4,xlim=c(0,3),type='l',xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:4096')
plot(hspec5,xlim=c(0,3),type='l',xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:5192')
nfft = 2048
print(paste('El valor en ms de la ventana de tiempo es:',nnft/y@samp.rate/1e3,sep='')
nfft = 2048
print(paste('El valor en ms de la ventana de tiempo es:',nnft/y@samp.rate/1e3,sep=''))
nfft = 2048
print(paste('El valor en ms de la ventana de tiempo es:',nfft/y@samp.rate/1e3,sep=''))
nfft
y@samp.rate/nfft
y@samp.rate
y@samp.rate/y@samp.rate
y@samp.rate/(y@samp.rate/2)
1/(y@samp.rate/(y@samp.rate/2))
1/(y@samp.rate/(nfft))
1/(y@samp.rate/(nfft))*1e3
nfft = 2048
print(paste('El valor en ms de la ventana de tiempo es:',1/(y@samp.rate/(nfft))*1e3,sep=''))
help("meanspec")
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n',xlim=c(0,3),xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n',xlim=c(0,3),xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
legend(2,0.25,legend=c('hanning','rectangle'),text.col=c('blue','red'))
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n',xlim=c(0,40),xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
legend(2,0.25,legend=c('hanning','rectangle'),text.col=c('blue','red'))
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n',xlim=c(0,10),xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
legend(2,0.25,legend=c('hanning','rectangle'),text.col=c('blue','red'))
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n',xlim=c(0,5),xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
legend(2,0.25,legend=c('hanning','rectangle'),text.col=c('blue','red'))
hspec1<-meanspec(y@left-mean(y@left),f=fs,wn='hanning',wl=2048,plot=0)
hspec2<-meanspec(y@left-mean(y@left),f=fs,wn='rectangle',wl=2048,plot=0)
plot(0,0,type='n',xlim=c(0,4),xlab='Frequency [Hz]',ylab='Amplitude',main='nfft:1024')
lines(hspec1,type='l',col='blue')
lines(hspec2,type='l',col='red')
legend(2,0.25,legend=c('hanning','rectangle'),text.col=c('blue','red'))
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=1024, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
help(autoc)
knitr::opts_chunk$set(echo = TRUE, fig.align='center', out.width = '80%')
library("shiny")
library("tuneR")
library("seewave")
library("kableExtra")
library("dplyr")
### Pitch tracking a partir de la autocorrelacion
res <- autoc(cancion, f=fs, wl=2048, plot=F)
### Pitch tracking a partir de la autocorrelacion
res <- autoc(cancion, f=fs, wl=2048, plot=F)
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
picos
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE) %>%
kable_styling(full_width = F)
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE) %>%
kable_styling(full_width = F)
# Tracking del pitch (grafica)
fpeaks(s, plot=T, xlim=c(0,1.2), xlab = "Frecuencia(kHz)", ylab = "Amplitud")
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE) %>%
kable_styling(full_width = F)
# Tracking del pitch (grafica)
fpeaks(s, plot=T, xlim=c(0,1.2), xlab = "Frecuencia(kHz)", ylab = "Amplitud")
### Pitch tracking a pariir del periodograma
perioWav <- periodogram(y, width = 2048)
freqWav <- FF(perioWav)
noteWav <- noteFromFF(freqWav)
### Sin suavizado
melodyplot(perioWav, observed = noteWav, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames <- noteWav[!is.na(noteWav)]
notenames(noteWavNames)
par(mfrow=c(3,2))
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE) %>%
kable_styling(full_width = F)
# Tracking del pitch (grafica)
fpeaks(s, plot=T, xlim=c(0,1.2), xlab = "Frecuencia(kHz)", ylab = "Amplitud")
### Pitch tracking a pariir del periodograma
perioWav <- periodogram(y, width = 2048)
freqWav <- FF(perioWav)
noteWav <- noteFromFF(freqWav)
### Sin suavizado
melodyplot(perioWav, observed = noteWav, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames <- noteWav[!is.na(noteWav)]
notenames(noteWavNames)
### Con suavizado
noteWav_s <- smoother(noteWav)
melodyplot(perioWav, observed = noteWav_s, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames_s <- noteWav_s[!is.na(noteWav_s)]
notenames(noteWavNames_s)
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="blackman", wl=1024, ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="blackman", wl=1024, ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
help("specprop")
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="blackman", wl=1024, ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
sp<- specprop(y,f=fs,str=F,plot=1)
help(spc)
help(spec)
help("meanspec")
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="hanning", wl=1024, ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
s<-meanspec(y,f=fs,wl=2048,wn='hanning',ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="hanning", wl=1024, ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
s<-meanspec(y,f=fs,wl=2048,wn='hanning',
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="hanning", wl=1024, ylim=c(0,0.8),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
s<-meanspec(y,f=fs,wl=2048,wn='hanning',plot=F)
sp<- specprop(s,f=fs,str=F,plot=1)
help("specprop")
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="hanning", wl=1024, ylim=c(0,3),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
s<-meanspec(y,f=fs,wl=2048,wn='hanning',plot=F)
sp<- specprop(s,f=fs,str=F,flim=c(0,3),plot=1)
par(mfrow=c(2,2))
# Frecuencia dominante (dfreq)
df <- dfreq(y, wn="hanning", wl=1024, ylim=c(0,3),
xlab = "Tiempo(s)", ylab="Frecuencia(kHz)")
# Tabla de las frecuencias dominantes (sin repeticion)
info <- rle(df[,2]) %>%
unclass() %>%
as.data.frame() %>%
mutate(end = cumsum(lengths),
start = c(1, lag(end)[-1] + 1))
ddf <- data.frame(start=df[info$start,1], end=df[info$end,1], frequency=info$values)
# Propiedades en una tabla
kable(ddf, col.names=c("Time.Start", "Time.End", "Frequency")) %>%
kable_styling(full_width = F)
s<-meanspec(y,f=fs,wl=2048,wn='hanning',plot=F)
sp<- specprop(s,f=fs,str=F,flim=c(0,3),plot=1)
# Numero de cruces por el cero de la senal
nc0 <- zcr(y, wl=1024, plot=TRUE, xlab="Tiempo(s)")
par(mfrow=c(3,2))
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE)
kable_styling(full_width = F)
par(mfrow=c(3,2))
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE)
kable_styling(full_width = F)
par(mfrow=c(3,2))
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE) %>% kable_styling(full_width = F)
# Tracking del pitch (grafica)
fpeaks(s, plot=T, xlim=c(0,1.2), xlab = "Frecuencia(kHz)", ylab = "Amplitud")
### Pitch tracking a pariir del periodograma
perioWav <- periodogram(y, width = 2048)
freqWav <- FF(perioWav)
noteWav <- noteFromFF(freqWav)
### Sin suavizado
melodyplot(perioWav, observed = noteWav, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames <- noteWav[!is.na(noteWav)]
notenames(noteWavNames)
### Con suavizado
noteWav_s <- smoother(noteWav)
melodyplot(perioWav, observed = noteWav_s, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames_s <- noteWav_s[!is.na(noteWav_s)]
notenames(noteWavNames_s)
help("kable_styling")
par(mfrow=c(3,2))
### Pitch tracking a partir de la autocorrelacion
res <- autoc(y, f=fs, wl=2048, plot=F)
# Tracking del pitch (grafica)
plot(res[,1], res[,2], type="l", main = "Pitch Tracking", xlab="Tiempo(s)", ylab="Frequencia")
# Obtenemos las notas que forman esta cancion
notas  <- unique(res[,2])
notas
### Pitch tracking a partir de la funcion fpeaks()
s     <- meanspec(y@left, fs, wl=2048, wn="hanning", plot=F)
picos <- fpeaks(s, plot=F)
# Tracking del pitch (frecuencias encontradas) en una tabla
kable(picos, col.names=c("Frecuencia", "Amplitud"), row.names=FALSE) #%>% kable_styling(full_width = F)
# Tracking del pitch (grafica)
fpeaks(s, plot=T, xlim=c(0,1.2), xlab = "Frecuencia(kHz)", ylab = "Amplitud")
### Pitch tracking a pariir del periodograma
perioWav <- periodogram(y, width = 2048)
freqWav <- FF(perioWav)
noteWav <- noteFromFF(freqWav)
### Sin suavizado
melodyplot(perioWav, observed = noteWav, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames <- noteWav[!is.na(noteWav)]
notenames(noteWavNames)
### Con suavizado
noteWav_s <- smoother(noteWav)
melodyplot(perioWav, observed = noteWav_s, plotenergy = F, xlab = "Tiempo", ylab="Nota")
# Nombre de las notas
noteWavNames_s <- noteWav_s[!is.na(noteWav_s)]
notenames(noteWavNames_s)
