all(pId)
unique(pId)
help('unique')
(upId <- unique(pId))
for(ix in 1:length((upId))){
print(upId[ix])
}
cnt = 0
for(ix in 1:length((upId))){
print(upId[ix])
cnt+=1
}
cnt = 0
for(ix in 1:length((upId))){
print(upId[ix])
cnt=cnt+1
}
cnt
length((upId)
length((upId)
length(pId)
length(upId)
pId
data
help('text')
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
for (ix in 1:n){
print(ix)
}
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot.new()
for (ix in 1:n){
text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
help('points')
plot.new()
plot(min(out$scores[,1]):max(out$scores[,1]), min(out$scores[,2]):max(out$scores[,2]), type = "n")  # setting up coord. system
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n")  # setting up coord. system
for (ix in 1:n){
points(out$scores[ix,1],out$scores[ix,2],pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n")  # setting up coord. system
for (ix in 1:n){
points(out$scores[ix,1],out$scores[ix,2],pId[ix],col = "red")
#text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
points(out$scores[,,1],out$scores[,,2],pId[ix],col = "red")
points(out$scores[,1],out$scores[,2],pId[ix],col = "red")
plot.net()
plot.new()
points(1:10,1:10)
points(1:10,1:10,col='red')
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n")  # setting up coord. system
points(1:10,1:10,col='red')
out$scores[,1]
points(out$scores[,1],out$scores[,1],col = "red")
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n")  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "red")
text(out$scores[ix,1],out$scores[ix,2],pId[ix])
print(pId[ix])
n
for (ix in 1:n){
print(pId[ix])
#text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
##################################################
#Ejercicio de evaluación 11.1
##################################################
rm(list=ls())
graphics.off()
#han hecho sobre las obras de pintores de reconocido prestigio(*).
#(*) Las columas del fichero se corresponden con las variables:
#1- Nombre del autor;
#2- Nombre abreviado del autor;
#3- Escuela a la que pertenece el autor (1: RENACIMIENTO, 2: MANIERISMO, 3: SEISCIENTOS, 4: VENECIANA, 5: LOMBARDA, 6: SIGLO XVI, 7: SIGLO XVII, 8: FRANCESA);
# Valoración en
#4- Composición;
#5- Dibujo;
#6- Color;
#7- Expresión
data <- read.delim('/Users/froux/Downloads/Datos-20190121/pint.txt',header=F,sep='')
colnames(data) <- c('Nombre','Abr','Escuela','Composicion','Dibujo','Color','Expresion')
#Realizar un ACP sobre las variables cuantitativas.
#Decidir si realizar sobre la matriz de correlaciones o covarianzas el análisis.
x<-data[,4:7]
for (ix in 1:ncol(x)){
print( max(x[,ix])-min(x[,ix]) )
}
for (ix in 1:ncol(x)){
print( sd(x[,ix]) )
}
cor(x,x)
out <- princomp(x,cor = F)
#Obtener la descomposición de la variabilidad por componentes en términos de porcentaje.
summary(out)
#Interpretar las dos primeras componentes.
cor(x,out$scores)
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n")  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix])
}
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .8)
}
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .4)
}
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
data$Escuela
unique(data$Escuela)
where(data$Escuela==1)
which(data$Escuela==1)
idx <-[]
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==1)
}
C <- c('red','blue','green','black','yellow')
sId
C <- c('red','blue','green','black','yellow','magenta')
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
C <- c('red','blue','green','black','yellow','magenta')
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
points(out$scores[idx,1],out$scores[idx,2],col=C[ix])
}
data$Escuela
# You could also get and store all distinct colors in the cl object and use the sample function to select colors at random
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
mycols2 <- sample(cl, 7)
mycols2
mycols <- sample(cl, n)
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
mycols <- sample(cl, n)
mycols
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
points(out$scores[idx,1],out$scores[idx,2],col=C[ix])
}
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
data
##################################################
#Ejercicio de evaluación 11.1
##################################################
rm(list=ls())
graphics.off()
#El fichero de datos pint.txt contiene los conocidos datos sobre las valoraciones que ciertos expertos
#han hecho sobre las obras de pintores de reconocido prestigio(*).
#(*) Las columas del fichero se corresponden con las variables:
#1- Nombre del autor;
#2- Nombre abreviado del autor;
#3- Escuela a la que pertenece el autor (1: RENACIMIENTO, 2: MANIERISMO, 3: SEISCIENTOS, 4: VENECIANA, 5: LOMBARDA, 6: SIGLO XVI, 7: SIGLO XVII, 8: FRANCESA);
# Valoración en
#4- Composición;
#5- Dibujo;
#6- Color;
#7- Expresión
data <- read.delim('/Users/froux/Downloads/Datos-20190121/pint.txt',header=F,sep='')
colnames(data) <- c('Nombre','Abr','Escuela','Composicion','Dibujo','Color','Expresion')
#Realizar un ACP sobre las variables cuantitativas.
#Decidir si realizar sobre la matriz de correlaciones o covarianzas el análisis.
x<-data[,4:7]
for (ix in 1:ncol(x)){
print( max(x[,ix])-min(x[,ix]) )
}
for (ix in 1:ncol(x)){
print( sd(x[,ix]) )
}
cor(x,x)
out <- princomp(x,cor = F)
#Obtener la descomposición de la variabilidad por componentes en términos de porcentaje.
summary(out)
#Interpretar las dos primeras componentes.
cor(x,out$scores)
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
par(mfrow=c(2, 2))
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
##################################################
#Ejercicio de evaluación 11.1
##################################################
rm(list=ls())
graphics.off()
#El fichero de datos pint.txt contiene los conocidos datos sobre las valoraciones que ciertos expertos
#han hecho sobre las obras de pintores de reconocido prestigio(*).
#(*) Las columas del fichero se corresponden con las variables:
#1- Nombre del autor;
#2- Nombre abreviado del autor;
#3- Escuela a la que pertenece el autor (1: RENACIMIENTO, 2: MANIERISMO, 3: SEISCIENTOS, 4: VENECIANA, 5: LOMBARDA, 6: SIGLO XVI, 7: SIGLO XVII, 8: FRANCESA);
# Valoración en
#4- Composición;
#5- Dibujo;
#6- Color;
#7- Expresión
data <- read.delim('/Users/froux/Downloads/Datos-20190121/pint.txt',header=F,sep='')
colnames(data) <- c('Nombre','Abr','Escuela','Composicion','Dibujo','Color','Expresion')
#Realizar un ACP sobre las variables cuantitativas.
#Decidir si realizar sobre la matriz de correlaciones o covarianzas el análisis.
x<-data[,4:7]
for (ix in 1:ncol(x)){
print( max(x[,ix])-min(x[,ix]) )
}
for (ix in 1:ncol(x)){
print( sd(x[,ix]) )
}
cor(x,x)
out <- princomp(x,cor = F)
#Obtener la descomposición de la variabilidad por componentes en términos de porcentaje.
summary(out)
#Interpretar las dos primeras componentes.
cor(x,out$scores)
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
graphics.off()
pId <- data$Abr
n<-nrow(data)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot.new()
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
graphics.off()
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
getwd
getwd()
setwd("/Users/froux")
setwd('/Users/froux/MasterIngeneriaComputacional2018/EAD-MD-v')
##################################################
#Ejercicio de evaluación 11.1
##################################################
rm(list=ls())
graphics.off()
setwd('/Users/froux/MasterIngeneriaComputacional2018/EAD-MD-v')
pdf(file='FREDERIC_ROUX_Ej11-1_ead_md-v.pdf',width=5, heigh=10, paper='a4r')
plot.new()
par( mfrow=c(2,2) )
#han hecho sobre las obras de pintores de reconocido prestigio(*).
#(*) Las columas del fichero se corresponden con las variables:
#1- Nombre del autor;
#2- Nombre abreviado del autor;
#3- Escuela a la que pertenece el autor (1: RENACIMIENTO, 2: MANIERISMO, 3: SEISCIENTOS, 4: VENECIANA, 5: LOMBARDA, 6: SIGLO XVI, 7: SIGLO XVII, 8: FRANCESA);
# Valoración en
#4- Composición;
#5- Dibujo;
#6- Color;
#7- Expresión
data <- read.delim('/Users/froux/Downloads/Datos-20190121/pint.txt',header=F,sep='')
colnames(data) <- c('Nombre','Abr','Escuela','Composicion','Dibujo','Color','Expresion')
#Realizar un ACP sobre las variables cuantitativas.
#Decidir si realizar sobre la matriz de correlaciones o covarianzas el análisis.
x<-data[,4:7]
for (ix in 1:ncol(x)){
print( max(x[,ix])-min(x[,ix]) )
}
for (ix in 1:ncol(x)){
print( sd(x[,ix]) )
}
cor(x,x)
out <- princomp(x,cor = F)
#Obtener la descomposición de la variabilidad por componentes en términos de porcentaje.
summary(out)
#Interpretar las dos primeras componentes.
cor(x,out$scores)
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp.',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp.',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
dev.off()
##################################################
#Ejercicio de evaluación 11.1
##################################################
rm(list=ls())
##################################################
#Ejercicio de evaluación 11.1
##################################################
rm(list=ls())
graphics.off()
setwd('/Users/froux/MasterIngeneriaComputacional2018/EAD-MD-v')
pdf(file='FREDERIC_ROUX_Ej11-1_ead_md-v.pdf',width=5, heigh=10, paper='a4r')
par( mfrow=c(1,2) )
#El fichero de datos pint.txt contiene los conocidos datos sobre las valoraciones que ciertos expertos
#han hecho sobre las obras de pintores de reconocido prestigio(*).
#(*) Las columas del fichero se corresponden con las variables:
#1- Nombre del autor;
#2- Nombre abreviado del autor;
#3- Escuela a la que pertenece el autor (1: RENACIMIENTO, 2: MANIERISMO, 3: SEISCIENTOS, 4: VENECIANA, 5: LOMBARDA, 6: SIGLO XVI, 7: SIGLO XVII, 8: FRANCESA);
# Valoración en
#4- Composición;
#5- Dibujo;
#6- Color;
#7- Expresión
data <- read.delim('/Users/froux/Downloads/Datos-20190121/pint.txt',header=F,sep='')
colnames(data) <- c('Nombre','Abr','Escuela','Composicion','Dibujo','Color','Expresion')
#Realizar un ACP sobre las variables cuantitativas.
#Decidir si realizar sobre la matriz de correlaciones o covarianzas el análisis.
x<-data[,4:7]
for (ix in 1:ncol(x)){
print( max(x[,ix])-min(x[,ix]) )
}
for (ix in 1:ncol(x)){
print( sd(x[,ix]) )
}
cor(x,x)
out <- princomp(x,cor = F)
#Obtener la descomposición de la variabilidad por componentes en términos de porcentaje.
summary(out)
#Interpretar las dos primeras componentes.
cor(x,out$scores)
#Representar los autores según los valores de las dos primeras componentes.
pId <- data$Abr
n<-nrow(data)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp.',ylab = '2nd Principal Comp.')  # setting up coord. system
points(out$scores[,1],out$scores[,2],col = "white")
for (ix in 1:n){
print(pId[ix])
text(out$scores[ix,1],out$scores[ix,2],pId[ix],cex = .55)
}
#Representar los autores según los valores de las dos primeras componentes mostrando
#la escuela a la que pertenecen.
sId <-unique(data$Escuela)
n <- length(sId)
cl <- colors(distinct = TRUE)
set.seed(15887) # to set random generator seed
C <- sample(cl, n)
plot(c(min(out$scores[,1]),max(out$scores[,1])), c(min(out$scores[,2]),max(out$scores[,2])), type = "n",xlab = '1st Principal Comp.',ylab = '2nd Principal Comp.')  # setting up coord. system
for (ix in 1:n){
idx<-which(data$Escuela==sId[ix])
for (ix2 in 1:length(idx)){
text(out$scores[idx[ix2],1],out$scores[idx[ix2],2],pId[idx[ix2]],cex = .55,col=C[ix])
}
}
dev.off()
