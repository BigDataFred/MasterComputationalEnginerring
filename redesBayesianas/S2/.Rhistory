return (h)
}
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
mle_multinomial(sample$Weather)
levels(sample$Weather)
sample<-data.frame(Weather=c("R","S","R","R","R","S"), Time=c(48.2,43.1,49.4,52.8,48.1,44.4))
sample
build_model_parametric<-function (data){
## El modelo asume que f(Time | Weather="S") y f(Time | Weather="R") son DISTINTAS
## y siguen una cierta distribucion parametrica.
## El formato del modelo generado por la funcion es libre, pero tiene que funcionar
## con el resto de funciones implementadas
return (NULL)
}
model<-build_model_parametric(sample)
model
sample<-rbeta(1000,2,3)
sample
max(sample)
sum(sample)
rm(list=ls())
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
sample$Time
dbeta(sample$Time,2,5)
dbeta(sample$Time,1,5)
dbeta(sample$Time,1,3)
dnorm(sample$Time,0,1)
dbeta(sample$Time,15,25)
dbeta(sample$Time,mean(sample$Time),sd(sample$Time))
?dgamma()
dgamma(sample$Time,5)
dgamma(sample$Time,3)
dgamma(sample$Time,2)
dgamma(sample$Time,1)
plot(sample$Time,dgamma(sample$Time,1))
plot(sample$Time,dgamma(sample$Time,5))
plot(sample$Time,dgamma(sample$Time,15))
plot(sample$Time,dgamma(sample$Time,25))
plot(sample$Time,dgamma(sample$Time,35))
plot(sample$Time,dgamma(sample$Time,45))
plot(sample$Time,dgamma(sample$Time,55))
plot(sample$Time,dgamma(sample$Time,50))
plot(sample$Time,dbeta(sample$Time,3,5))
plot(sample$Time,dbeta(sample$Time,5,5))
plot(sample$Time,dbeta(sample$Time,15,5))
plot(sample$Time,dbeta(sample$Time,25,5))
plot(sample$Time,dbeta(sample$Time,2,5))
plot(sample$Time,dbeta(sample$Time,2,25))
plot(sample$Time,dbeta(sample$Time,2,45))
plot(sort(sample$Time),dbeta(sort(sample$Time),2,4))
plot(sort(sample$Time),dbeta(sort(sample$Time),2,6))
plot(sort(sample$Time),dbeta(sort(sample$Time),5,6))
plot(sort(sample$Time),dbeta(sort(sample$Time),15,6))
plot(sort(sample$Time),dbeta(sort(sample$Time),15,16))
dev.off()
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x<- sort( sample$Time )
plot(x,dnorm(x,mean=mean(x),sd=sd(x)))
lines(x,dnorm(x,mean=mean(x),sd=sd(x)))
hist(x)
hist(x)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)))
hist(x)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)))
?hist
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)))
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,5,col=3)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,5,col=3))
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,5),col=3)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,25),col=3)
dev.off()
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x<- sort( sample$Time )
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,50),col=3
dgamma(x,50)
dgamma(x,50)
lines(x,dgamma(x,50),col=3)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,50),col=3)
dev.off()
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,50),col=3)
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x<- sort( sample$Time )
x<-mean(x)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dbeta(x,50),col=3)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,50),col=3)
dev.off()
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,50),col=3)
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x<- sort( sample$Time )
x<-x-mean(x)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,50),col=3)
lines(x,dgamma(x,5),col=3)
dev.off()
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x<- sort( sample$Time )
x<-x-mean(x)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,5),col=3)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,5),col=2)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,2),col=3)
lines(x,dgamma(x,2),col=1)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dgamma(x,1),col=3)
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dbeta(x,2,3),col=3)
ylim=c(0,1)
ylim=c(0,1)
xlim=c(0,1)
hist(x,freq=FALSE,ylim=c(0,1))
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dbeta(x,2,3),col=3)
hist(x,freq=FALSE
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dbeta(x,1,1),col=3)
dev.off()
hist(x,freq=FALSE)
lines(x,dnorm(x,mean=mean(x),sd=sd(x)),col=2)
lines(x,dbeta(x,5,3),col=3)
?dbeta
pTs <- mle_multinomial(sample$Time[which(sample$Weather=='S')])
rm(list=ls()())
rm(list=ls()
nombre<-c("Roux","Frédéric")#"Apellido1 Apellido2, Nombre"
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Estimacion de parametros ------------------------------------------------
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#' Funcion para estimar los parametros de una distribucion multinomial
#'
#' @param sample Muestra de la que estimar los parametros. Debe ser un vector de factores
#' @return Para cada posible valor de los factores (\code{levels(sample)}),
#' la probabilidad estimada para dicho valor
#' @examples
#' sample<-factor(c("A","A","B","C","A","C"),levels=c("A","B","C"))
#' mle_multinomial(sample)
mle_multinomial<-function (sample){
## Implementar el codigo necesario para devolver la probabilidad asociada a cada
## valor definido en el vector 'sample'.
## Nota: Puede haber valores que no aparezcan en la muestra. En ese caso la probabilidad
## debera ser cero; la lista de posible valores que puede tomar un 'factor' se obtiene con
## la funcion 'levels'.
## La funcion da como resultado  un vector de probabilidades, correspondiendose el primer
## valor con la probabilidad asociada al primer 'nivel', la segunda al segundo etc.
probabilities<-rep(0,length(levels(sample)))
r <- length(levels(sample))
n = length( sample)
for (ix in 1:length(probabilities)){
nx = length(which(sample == levels(sample)[ix]))
probabilities[ix] <- ( nx + 1 )/( n + r )
}
return(probabilities)
}
#' Funcion para estimar los parametros de una distribucion Beta usando
#' el motodo de los momentos
#'
#' @param sample Muestra de la que estimar los parámetros
#' @return Vector de dos posiciones, conteniendo respectivamente los parametros alfa y beta estimados (en ese orden)
#' @examples
#' sample<-rbeta(1000,2,3)
#' momest_beta(sample)
momest_beta<-function(sample){
f<-Vectorize(function(a,b,sample)
{
sum(log(dbeta(sample,a,b)))
},vectorize.args=c("a","b"))
a <- seq(1,100,1)
b <- seq(1,100,1)
logveros <- outer(a,b,f,sample=sample)
ix <- which(logveros==max(max(logveros)),TRUE)
## Implementar la funcion
parameters<-c(0,0)
parameters[1] <- a[ix[1]]
parameters[2] <- b[ix[2]]
return(parameters)
}
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Teoria de la informacion ------------------------------------------------
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#' Funcion para computar la entropia asociada a una variable discreta (multinomial)
#'
#' @param probs Vector de probabilidades asociadas a cada valor de la variable
#' @return Enropia calculada utilizando el logaritmo en base 2
#' @examples
#' sample<-factor(c("A","A","B","C","A","C"),levels=c("A","B","C"))
#' probs<-mle_multinomial(sample)
#' entropy(probs)
entropy<-function(probs){
h<--sum(probs*log(probs))
return (h)
}
pTS <- mle_multinomial(sample$Time[which(sample$Weather=='S')])
pTR <- mle_multinomial(sample$Time[which(sample$Weather=='R')])
pTS
pTR
p <- mle_multinomial(sample$Weather)
p
sample$Time
sort(sample$Time)
min(sort(sample$Time))
seq(round(min(sort(sample$Time))),round(max(sample$Time)),1)
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
bins <- seq(round(min(sort(sample$Time))),round(max(sample$Time)),1)
xS <- sample$Time[which(sample$Weather=='S')]
xR <- sample$Time[which(sample$Weather=='R')]
xS
xR
bins <- seq(round(min(sort(sample$Time))),round(max(sample$Time)),1)
xS
length(bins)
bins
d<-hist(sample$Time)$density
d
dev.off()
d <- hist(sample$Time)$density
d
d <- hist(sample$Time)
d
plot(d$mids,d$density)
h <- hist(sample$Time)
dev.off()
h <- hist(sample$Time)
h
$hist
?hist
#' Esta funcion toma como entrada muestras de pares (climatologia, tiempo) y genera un
#' modelo que posteriormente se utilizara para responder preguntas.
#'
#' @param data Matriz con dos variables, 'Weather' y 'Time'
#' @return Parametros del modelo utilizado para representar el problema
#' @examples
#' sample<-data.frame(Weather=c("R","S","R","R","R","S"), Time=c(48.2,43.1,49.4,52.8,48.1,44.4))
#' model<-build_model_parametric(sample)
#' estimate_probability_time_interval_parametric(model, 45,50)
build_model_parametric<-function (data){
## El modelo asume que f(Time | Weather="S") y f(Time | Weather="R") son DISTINTAS
## y siguen una cierta distribucion parametrica.
## El formato del modelo generado por la funcion es libre, pero tiene que funcionar
## con el resto de funciones implementadas
p <- mle_multinomial(sample$Weather)
return (NULL)
}
h <- hist(sample$Time,plot=FALSE)
h
h$density
plot(h$mids,h$density)
plot(h$mids,h$density,type='l')
lines(h$mids,dbeta(h$density,3,5))
lines(h$mids,dbeta(h$density,2,1))
lines(h$mids,dbeta(h$density,1,1))
lines(h$mids,dbeta(h$density,0.5,1))
lines(h$mids,dbeta(h$density,0.5,0.1))
dbeta(h$density,0.5,0.1)
dbeta(h$density,0.5,0.2)
dbeta(h$density,0.5,1)
dbeta(h$density,0.5,5)
dbeta(h$density,25,5)
dbeta(h$density,2,5)
plot(h$mids,dbeta(h$density,2,5))
plot(h$mids,dbeta(h$density,3,5))
plot(h$mids,dbeta(h$density,5,3))
plot(h$mids,dbeta(h$density,5,4))
plot(h$mids,dbeta(h$density,5,5))
plot(h$mids,dbeta(h$density,4,5))
plot(h$mids,dbeta(h$density,4,3))
?dnorm
?dbeta
h <- hist(sample$Time,plot=FALSE)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,3),col=2)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,5),col=2)
lines(h$mids,dgamma(h$density,15),col=2)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,2),col=2)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,2),col=1)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,1),col=2)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,2),col=2)
plot(h$mids,h$density,type='l')
lines(h$mids,dgamma(h$density,2),col=2)
lines(h$mids,dbeta(h$density,3,2),col=3)
sample<-rpois(1000,5)
sample
dpois(sample,5)
prod(probabilidades)
## ----verosimilitud,prompt=TRUE,message=FALSE,tidy=FALSE------------------
#Creamos la muestra
sample<-rpois(1000,5)
#Determinamos la probabilidad asociada a cada valor muestreado
probabilidades<-dpois(sample,5)
#La probabilidad la computamos como el producto
prod(probabilidades)
sum(log(probabilidades))
rm(list=ls())
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
sample
sample$Time
dpois(sample$Time,5)
dpois(sample$Time,1)
dpois(sample$Time,2)
warnings()
dgamma(sample$Time,3)
dgamma(sample$Time,2)
plot(sample$Time,dgamma(sample$Time,2)
plot(sample$Time,dgamma(sample$Time,2))
plot(sample$Time,dgamma(sample$Time,2) )
plot(sample$Time,dgamma(sample$Time,5) )
plot(sample$Time,dgamma(sample$Time,3) )
plot(sample$Time,dbeta(sample$Time,2,3) )
plot(sample$Time,dbeta(sample$Time,5,3) )
dgamma(sample$Time,15)
plot(sample$Time,dgamma(sample$Time,15))
plot(sample$Time,dgamma(sample$Time,15),type='l')
plot(sort(sample$Time),dgamma(sort(sample$Time),15),type='l')
plot(sort(sample$Time),dgamma(sort(sample$Time),25),type='l')
plot(sort(sample$Time),dgamma(sort(sample$Time),45),type='l')
plot(sort(sample$Time),dgamma(sort(sample$Time),55),type='l')
plot(sort(sample$Time),dgamma(sort(sample$Time),49),type='l')
hist(sample$Time)
hist(sample$Time,freq=FALSE)
plot(sort(sample$Time),dgamma(sort(sample$Time),49),type='l')
hist(sample$Time,freq=FALSE)
lines(sort(sample$Time),dgamma(sort(sample$Time),49),type='l')
lines(sort(sample$Time),dgamma(sort(sample$Time),45),type='l')
lines(sort(sample$Time),dgamma(sort(sample$Time),51),type='l')
round(sample$Time)
dpois(round(sample$Time),10)
dpois(round(sample$Time),5)
dpois(round(sample$Time),3)
plot(sample$Time,dpois(round(sample$Time),3)
plot(sample$Time,dpois(round(sample$Time),3))
plot(sample$Time,dpois(round(sample$Time),10))
plot(sample$Time,dpois(round(sample$Time),20))
plot(sample$Time,dpois(round(sample$Time),25))
plot(sample$Time,dpois(round(sample$Time),30))
rm(list=ls())
dev.off()
x <- sort(round(sample$Time))
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x <- sort(round(sample$Time))
x
plot(x)
dev.off()
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x <- sort(round(sample$Time))
plot(x,dgamma(x,15),type='l')
plot(x,dgamma(x,35),type='l')
plot(x,dgamma(x,45),type='l')
hist(x)
hist(x)
lines(x,dgamma(x,45),type='l')
hist(x,freq=FALSE)
lines(x,dgamma(x,45),type='l')
hist(x,freq=FALSE)
lines(x,dgamma(x,55),type='l')
x <- sort(round(sample$Time))
hist(x,freq=FALSE)
lines(x,dgamma(x,52),type='l')
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x <- sort(round(sample$Time))
hist(x,freq=FALSE)
lines(x,dgamma(x,45),type='l')
hist(x,freq=FALSE)
lines(x,dgamma(x,45),col=2)
hist(x,freq=FALSE)
lines(x,dpois(x,10),col=2)
hist(x,freq=FALSE)
lines(x,dpois(x,15),col=2)
hist(x,freq=FALSE)
lines(x,dpois(x,35),col=2)
hist(x,freq=FALSE)
lines(x,dpois(x,45),col=2)
hist(x,freq=FALSE)
lines(x,dpois(x,55),col=2)
#' Esta
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x <- sort(round(sample$Time))
hist(x,freq=FALSE)
lines(x,dpois(x,45),col=2)
x<-seq(0,100,0.1)
length(x)
?dchisq
?dlnorm
hist(sample$Time)
lines(sort(samples$Time),dlnorm(sort(samples$Time),mean=mean(samples$Time)),sd=sd(samples$Time))))
hist(sample$Time)
lines( sort(samples$Time), dlnorm(sort(samples$Time), mean=mean(samples$Time)), sd=sd(samples$Time) )
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
hist(sample$Time)
lines( sort(samples$Time), dlnorm(sort(samples$Time), mean=mean(samples$Time)), sd=sd(samples$Time) )
#' Esta func
rm(list=ls())
dev.off()
## Cargamos los datos para probar. Esta funcion crea una variable 'sample' con dichos datos
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
lines( sort(samples$Time), dlnorm(sort(samples$Time), mean=mean(samples$Time)), sd=sd(samples$Time) )
samples
sample
hist(sample$Time)
lines( sort(sample$Time), dlnorm(sort(sample$Time), mean=mean(sample$Time)), sd=sd(sample$Time) )
hist(sample$Time)
lines( sort(sample$Time), dlnorm(sort(sample$Time), meanlog=mean(sample$Time)), sdlog=sd(sample$Time) )
hist(sample$Time)
lines( sort(sample$Time), dlnorm( sort(sample$Time), meanlog=mean(sample$Time), sdlog=sd(sample$Time) ) )
dlnorm( sort(sample$Time), meanlog=mean(sample$Time), sdlog=sd(sample$Time) )
x<-hist(sample$Time,plot=FALSE)
x<-hist(sample$Time,plot=FALSE)
plot(x$mids,x$density)
x<-hist(sample$Time,plot=FALSE)
plot(x$mids,x$density,type='l')
x<-hist(sample$Time,plot=FALSE)
plot(x$mids,x$density,type='l')
x<-hist(log(sample$Time),plot=FALSE)
lines(x$mids,x$density,col=2)
dev.off()
x<-hist(sample$Time,plot=FALSE)
plot(x$mids,x$density,type='l')
x<-hist(log(sample$Time),plot=FALSE)
lines(x$mids,x$density,col=2)
lines(x$mids,x$density,col=2)
x$density
x<-hist(sample$Time,plot=FALSE)
plot(x$mids,x$density,type='l')
x<-hist(log(sample$Time),plot=FALSE)
plot(x$mids,x$density,col=2)
x$density
x<-hist(sample$Time,plot=FALSE)
plot(x$mids,x$density,type='l')
sum(x$density)
cumsum(x$density)
dgamma(sample$Time,5)
sum(dgamma(sample$Time,5))
dgamma(sample$Time,5)
dgamma(sort(sample$Time),5)
plot(dgamma(sort(sample$Time),5))
plot(dgamma(sort(sample$Time),15))
plot(dgamma(sort(sample$Time),45))
plot(dgamma(sort(sample$Time),35))
plot(dgamma(sort(sample$Time),55))
plot(dgamma(sort(sample$Time),45))
plot(dpois(sort(sample$Time),45))
plot(dpois(sort(round(sample$Time),45))
plot(dpois(sort(round(sample$Time),45)))
plot(dpois(sort(round(sample$Time)),45))
dev.off()
rm(list=ls())
ls
p2d = "~/MasterIngeneriaComputacional2018/redesBayesianas/S2/"
load(file = paste(p2d,"RRBB_travel_duration.Rdata",sep="") )
x = round(sample$Time)
x
dpois(x)
dpois(x,10)
rpois(1000,5)
x
dpois(x,5)
plot(x,dpois(x,5))
plot(x,dpois(x,45))
plot(x,dpois(x,48))
plot(x,dpois(x,43))
plot(x,dpois(x,44))
log(dpois(x,44))
sum(log(dpois(x,44)))
f <- function(x){sum(log(dpois(x,44)))}
mapply(f, seq(1,10,1),x)
?mapply
